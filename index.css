/* ==========================================================================
  Floats
  If you need to float something but you still want the object to remain
  reusable, consider using a class to create the float rather than baking
  it directly into the object. This allows objects to be used in more ways
========================================================================== */
.pull-left {
  float: left !important; }

.pull-right {
  float: right !important; }

/**
 * Make a parent relative. This is useful when you
 * need a child to be absolutely be position relative
 * to this element but you don't necessarily want the parent
 * object to always be relative
 */
.parent,
.is-parent {
  position: relative; }

/**
 * Contain floats
 *
 * Make an element expand to contain floated children.
 * Uses pseudo-elements (micro clearfix).
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of the
 *    element.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.cf:before,
.cf:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.cf:after {
  clear: both; }

/**
 * For clearing floats. Sometimes useful.
 */
.clear {
  clear: both; }

/* ==========================================================================
  Display Utilities
========================================================================== */
.no-top-border {
  border-top: none !important; }

.no-right-border {
  border-right: none !important; }

.no-bottom-border {
  border-bottom: none !important; }

.no-left-border {
  border-left: none !important; }

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.

 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */
.bfc,
.nbfc {
  overflow: hidden; }

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */
.nbfc-alt {
  display: table-cell;
  /* 1 */
  width: 10000px;
  /* 2 */ }

/**
 * Make a block span the full width regardless of previous styles
 */
.full {
  width: 100% !important; }

/**
 * Make content unable to break out of it's container
 */
.contained {
  max-width: 100%; }

/**
 * Center a block. The block will require a width for this to work
 */
.center {
  margin-left: auto;
  margin-right: auto; }

/**
 * Make a block fixed positioned. Useful for JS to make an element
 * fixed, like the overlay
 */
.is-fixed {
  position: fixed !important; }

/**
 * Adds a checkered transparent background like photoshop
 */
.transparent {
  background: bg-url("transparent-grid.png"); }

/**
 * Vertically align content using display-table
 */
.align-middle {
  display: table; }
  .align-middle .align-middle__content {
    display: table-cell;
    vertical-align: middle;
    margin-top: -2px; }

.align-top {
  vertical-align: top; }

/**
 * Media block. This is a common pattern of a block of variable-width text
 * and media to sits to the left or right.
 */
.mb.mb--reverse .mb__media,
.mb.mb--reverse .media, .mb.mb--right .mb__media,
.mb.mb--right .media, .mb.reverse .mb__media,
.mb.reverse .media,
.media-block.mb--reverse .mb__media,
.media-block.mb--reverse .media,
.media-block.mb--right .mb__media,
.media-block.mb--right .media,
.media-block.reverse .mb__media,
.media-block.reverse .media {
  float: right; }
.mb .mb__media,
.mb .media,
.media-block .mb__media,
.media-block .media {
  float: left; }
.mb .mb__content,
.mb .content,
.media-block .mb__content,
.media-block .content {
  overflow: hidden; }

/* ==========================================================================
  Grid Utilities
========================================================================== */
.unit {
  float: left; }

.unitRight {
  float: right; }

.size1of1 {
  float: none; }

.size1of2 {
  width: 50%; }

.size1of3 {
  width: 33.33333%; }

.size2of3 {
  width: 66.66667%; }

.size1of4 {
  width: 25%; }

.size2of4 {
  width: 50%; }

.size3of4 {
  width: 75%; }

.size1of5 {
  width: 20%; }

.size2of5 {
  width: 40%; }

.size3of5 {
  width: 60%; }

.size4of5 {
  width: 80%; }

.size1of6 {
  width: 16.66667%; }

.size2of6 {
  width: 33.33333%; }

.size3of6 {
  width: 50%; }

.size4of6 {
  width: 66.66667%; }

.size5of6 {
  width: 83.33333%; }

.size1of7 {
  width: 14.28571%; }

.size2of7 {
  width: 28.57143%; }

.size3of7 {
  width: 42.85714%; }

.size4of7 {
  width: 57.14286%; }

.size5of7 {
  width: 71.42857%; }

.size6of7 {
  width: 85.71429%; }

.size1of8 {
  width: 12.5%; }

.size2of8 {
  width: 25%; }

.size3of8 {
  width: 37.5%; }

.size4of8 {
  width: 50%; }

.size5of8 {
  width: 62.5%; }

.size6of8 {
  width: 75%; }

.size7of8 {
  width: 87.5%; }

.size1of9 {
  width: 11.11111%; }

.size2of9 {
  width: 22.22222%; }

.size3of9 {
  width: 33.33333%; }

.size4of9 {
  width: 44.44444%; }

.size5of9 {
  width: 55.55556%; }

.size6of9 {
  width: 66.66667%; }

.size7of9 {
  width: 77.77778%; }

.size8of9 {
  width: 88.88889%; }

.size1of10 {
  width: 10%; }

.size2of10 {
  width: 20%; }

.size3of10 {
  width: 30%; }

.size4of10 {
  width: 40%; }

.size5of10 {
  width: 50%; }

.size6of10 {
  width: 60%; }

.size7of10 {
  width: 70%; }

.size8of10 {
  width: 80%; }

.size9of10 {
  width: 90%; }

.size1of11 {
  width: 9.09091%; }

.size2of11 {
  width: 18.18182%; }

.size3of11 {
  width: 27.27273%; }

.size4of11 {
  width: 36.36364%; }

.size5of11 {
  width: 45.45455%; }

.size6of11 {
  width: 54.54545%; }

.size7of11 {
  width: 63.63636%; }

.size8of11 {
  width: 72.72727%; }

.size9of11 {
  width: 81.81818%; }

.size10of11 {
  width: 90.90909%; }

.size1of12 {
  width: 8.33333%; }

.size2of12 {
  width: 16.66667%; }

.size3of12 {
  width: 25%; }

.size4of12 {
  width: 33.33333%; }

.size5of12 {
  width: 41.66667%; }

.size6of12 {
  width: 50%; }

.size7of12 {
  width: 58.33333%; }

.size8of12 {
  width: 66.66667%; }

.size9of12 {
  width: 75%; }

.size10of12 {
  width: 83.33333%; }

.size11of12 {
  width: 91.66667%; }

/* ==========================================================================
  JavaScript Utilities
========================================================================== */
/**
 * Adding this class to an element is usually
 * for JavaScript widgets that toggle content
 */
.hide-children > .child {
  display: none; }

.is-selected > .u-hideWhenParentSelected {
  display: none !important; }

.u-showWhenParentSelected {
  display: none !important; }
  .is-selected > .u-showWhenParentSelected {
    display: block !important; }

/**
 * This class is used for animations that occur when
 * scrolling down the page. Apply this class to an
 * element and the waypoints component will remove
 * it and trigger the animation
 */
.is-paused {
  -webkit-animation-play-state: paused !important;
  -moz-animation-play-state: paused !important;
  -o-animation-play-state: paused !important;
  animation-play-state: paused !important; }

/**
 * Only show an element if javascript is disabled
 */
/**
 * Only show an element if javascript is enabled
 */
/**
 * Make an element transparent with a fallback
 * for browsers that don't support opacity.
 * This is common used when fading an element in
 */
.is-transparent {
  opacity: 0; }
  .no-opacity .is-transparent {
    visibility: hidden; }
  .is-transparent.is-visible {
    opacity: 1; }
    .no-opacity .is-transparent.is-visible {
      visibility: visible; }

/* ==========================================================================
  z-index helpers
  You should be able to use these classes in most cases when you need to
  apply z-index. This makes it easier to debug any issues you're having
========================================================================== */
.zi-0 {
  position: relative;
  z-index: 0; }

.zi-1 {
  position: relative;
  z-index: 1; }

.zi-2 {
  position: relative;
  z-index: 2; }

.zi-3 {
  position: relative;
  z-index: 3; }

.zi-4 {
  position: relative;
  z-index: 4; }

.zi-5 {
  position: relative;
  z-index: 5; }

/* ==========================================================================
  Display utilities
========================================================================== */
/**
 * Display-type utilities
 */
.inline {
  display: inline !important; }

.inline-block,
.ib {
  display: inline-block !important; }

.block {
  display: block !important; }

/**
 * Don't include the padding and border as part of the width
 */
.border-box {
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

/**
 * Completely remove from the flow and screen readers.
 */
.is-hidden, .hidden, .js .no-js-only, .no-js .js-only {
  display: none !important;
  visibility: hidden !important; }

/**
 * Completely remove from the flow but leave available to screen readers.
 */
.is-vishidden {
  position: absolute !important;
  overflow: hidden;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px); }

/**
 * Useful for creating overlays
 */
.stretch {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

/**
 * Control visibility without affecting flow.
 */
.is-visible {
  visibility: visible; }

.is-invisible {
  visibility: hidden; }

/* ==========================================================================
  States utilities
========================================================================== */
/**
 * Indicate that interaction will result in an action.
 *
 * Commonly toggled via JavaScript.
 */
.is-actionable {
  cursor: pointer; }

.is-draggable {
  cursor: move; }

.is-disabled {
  cursor: default; }

.is-unselectable {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.is-waiting {
  transition: opacity 250ms linear;
  user-select: none;
  cursor: default;
  opacity: 0.5; }

.is-waiting:after {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0; }

.is-clickthrough {
  pointer-events: none; }

/* ==========================================================================
   Text utilities
   ========================================================================== */
/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */
.text-truncate {
  max-width: 100%;
  /* 1 */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  /* 2 */ }

/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */
.text-break {
  word-break: break-all;
  word-break: break-word;
  word-wrap: break-word; }

/* -------------------------------------------------------------------------- */
/**
 * Horizontal text alignment
 */
.text-center {
  text-align: center !important; }

.text-left {
  text-align: left !important; }

.text-right {
  text-align: right !important; }

/* ==========================================================================
  Link utilities
========================================================================== */
.link-block {
  display: block;
  text-decoration: none; }
  .link-block:hover {
    text-decoration: none; }
  .link-block:hover .title-2 {
    color: #79Be10; }

/**
 * Reset an anchor to appear as text
 */
.link-reset {
  text-decoration: none;
  color: inherit; }
